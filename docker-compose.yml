version: '3.2'
services:
  domains-web:
    container_name: domains-web
    image: nginx:alpine
    volumes:
      - "./docker/nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "8000:80"
    restart: always
    networks:
      - common
  domains-prometheus:
    container_name: domains-prometheus
    image: prom/prometheus:latest
    ports:
      - "9099:9090"
    volumes:
      - './docker/prometheus.yml:/etc/prometheus/prometheus.yml'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - common
  domains-elasticsearch:
    container_name: domains-elastic
    build:
      context: ./docker/elasticsearch/
      args:
        ELK_VERSION: 7.6.0
    volumes:
      - type: bind
        source: ./docker/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    networks:
      - common
  domains-kibana:
    container_name: domains-kibana
    build:
      context: ./docker/kibana/
      args:
        ELK_VERSION: 7.6.0
    volumes:
      - type: bind
        source: ./docker/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - common
    depends_on:
      - domains-elasticsearch
  domains-go_green:
    container_name: domains-go_green
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "6060:6060"
    restart: unless-stopped
    networks:
      - common
    command:
      "./main"
    volumes:
      - "./db/positions.db:/db/positions.db"
  domains-go_blue:
    container_name: domains-go_blue
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "6061:6060"
    restart: unless-stopped
    networks:
      - common
    command:
      "./main"
    volumes:
      - "./db/positions.db:/db/positions.db"
networks:
  common:
    driver: bridge